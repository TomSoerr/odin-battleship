(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,":root {\n  --font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,\n  Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;\n  --col-1: white;\n  --col-2: black;\n  --col-3: rgb(255, 163, 163);\n}\n\n*, *::before, *::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#content {\n  font-family: var(--font-family);\n  width: 100vw;\n  min-height: 100vh;\n  color: var(--col-2);\n  background-color: var(--col-1);\n  display: grid;\n  grid-template-rows: auto auto 1fr;\n  justify-items: center;\n  padding: 4rem;\n  gap: 4rem;\n  position: relative;\n}\n\n/* MAIN PAGE */\n\n#header {\n  grid-column: 1 / -1;\n  font-size: 4rem;\n}\n\n#footer {\n  grid-column: 1 / -1;\n  align-self: end;\n  color: var(--col-2);\n}\n\n#footer > a {\n  color: var(--col-2);\n}\n\n#gameboard-wrapper {\n  display: grid;\n  gap: 4rem;\n  justify-items: center;\n  width: 100%;\n  grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\n}\n\n.gameboard {\n  display: grid;\n  grid-auto-rows: 1fr;\n  border: thin solid var(--col-2);\n  width: 20rem;\n  height: 20rem;\n}\n\n.board-cell {\n  border: thin solid var(--col-2);\n  position: relative;\n}\n\n.board-cell.hit::before,\n.board-cell.water::before {\n  content: '';\n  width: 100%;\n  height: 100%;\n  position: absolute;\n}\n\n.board-cell.hit::before {\n  background-color: var(--col-1);\n  clip-path: polygon(20% 10%, 10% 20%, 40% 50%, 10% 80%, 20% 90%, 50% 60%, 80%\n  90%, 90% 80%, 60% 50%, 90% 20%, 80% 10%, 50% 40%);\n}\n\n.board-cell.water::before {\n  background-color: var(--col-2);\n  clip-path: polygon(10% 80%, 20% 90%, 90% 20%, 80% 10%);\n}\n\n.board-cell.ship,\n.board-cell.hover {\n  background-color: var(--col-2);\n}\n\n\n.board-cell.enemy:hover {\n  background-color: var(--col-3);\n  cursor: pointer;\n}\n\n.board-row {\n  display: grid;\n  grid-auto-flow: column;\n  justify-content: start;\n  grid-auto-columns: 1fr;\n}\n\n/* POPUP TO PLACE SHIPS */\n\n#popup-background {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(97, 98, 117, 0.554);\n  /* margin-top: -4rem; */\n}\n\n#popup {\n  background-color: var(--col-1);\n  padding: 4rem;\n  border-radius: 1rem;\n  margin: 4rem auto;\n  width: min-content;\n  display: grid;\n  justify-items: center;\n  gap: 1rem;\n}\n\n#popup > p {\n  text-decoration: underline;\n}\n\n.select {\n  position: relative;\n}\n\n.select:hover::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  background-color: var(--col-2);\n}\n\n#rotate-button {\n  appearance: none;\n  padding: 0.25rem;\n  border: thin solid var(--col-2);\n  background-color: var(--col-1);\n  border-radius: 0.5rem;\n  font-size: 1rem;\n}\n\n#rotate-button:hover {\n  background-color: rgba(97, 98, 117, 0.554);\n}\n\n@media only screen and (max-width: 600px) {\n  :root {\n    font-size: 0.9rem;\n  }\n\n  .gameboard {\n    width: 15rem;\n    height: 15rem;\n  }\n\n  #content {\n    padding: 1rem;\n    gap: 2rem;\n  }\n\n  #gameboard-wrapper {\n    gap: 2rem;\n  }\n\n  #popup {\n    margin: 1rem auto;\n    padding: 2rem;\n    border-radius: 0.5rem;\n  }\n}\n\n/* ANNOUNCE WINNER  */\n\n#winner {\n  position: absolute;\n  text-align: center;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(97, 98, 117, 0.731);\n  font-size: 4rem;\n  padding: 4rem;\n  display: grid;\n  place-items: center;\n  color: var(--col-1);\n  opacity: 0;\n}\n\n#winner.show {\n  transition: opacity 2s;\n  opacity: 1;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE;8CAC4C;EAC5C,cAAc;EACd,cAAc;EACd,2BAA2B;AAC7B;;AAEA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,+BAA+B;EAC/B,YAAY;EACZ,iBAAiB;EACjB,mBAAmB;EACnB,8BAA8B;EAC9B,aAAa;EACb,iCAAiC;EACjC,qBAAqB;EACrB,aAAa;EACb,SAAS;EACT,kBAAkB;AACpB;;AAEA,cAAc;;AAEd;EACE,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,mBAAmB;EACnB,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,SAAS;EACT,qBAAqB;EACrB,WAAW;EACX,2DAA2D;AAC7D;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,+BAA+B;EAC/B,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,+BAA+B;EAC/B,kBAAkB;AACpB;;AAEA;;EAEE,WAAW;EACX,WAAW;EACX,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,8BAA8B;EAC9B;mDACiD;AACnD;;AAEA;EACE,8BAA8B;EAC9B,sDAAsD;AACxD;;AAEA;;EAEE,8BAA8B;AAChC;;;AAGA;EACE,8BAA8B;EAC9B,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,sBAAsB;EACtB,sBAAsB;AACxB;;AAEA,yBAAyB;;AAEzB;EACE,eAAe;EACf,MAAM;EACN,SAAS;EACT,WAAW;EACX,YAAY;EACZ,0CAA0C;EAC1C,uBAAuB;AACzB;;AAEA;EACE,8BAA8B;EAC9B,aAAa;EACb,mBAAmB;EACnB,iBAAiB;EACjB,kBAAkB;EAClB,aAAa;EACb,qBAAqB;EACrB,SAAS;AACX;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,MAAM;EACN,YAAY;EACZ,WAAW;EACX,8BAA8B;AAChC;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,+BAA+B;EAC/B,8BAA8B;EAC9B,qBAAqB;EACrB,eAAe;AACjB;;AAEA;EACE,0CAA0C;AAC5C;;AAEA;EACE;IACE,iBAAiB;EACnB;;EAEA;IACE,YAAY;IACZ,aAAa;EACf;;EAEA;IACE,aAAa;IACb,SAAS;EACX;;EAEA;IACE,SAAS;EACX;;EAEA;IACE,iBAAiB;IACjB,aAAa;IACb,qBAAqB;EACvB;AACF;;AAEA,qBAAqB;;AAErB;EACE,kBAAkB;EAClB,kBAAkB;EAClB,MAAM;EACN,WAAW;EACX,YAAY;EACZ,0CAA0C;EAC1C,eAAe;EACf,aAAa;EACb,aAAa;EACb,mBAAmB;EACnB,mBAAmB;EACnB,UAAU;AACZ;;AAEA;EACE,sBAAsB;EACtB,UAAU;AACZ",sourcesContent:[":root {\n  --font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,\n  Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;\n  --col-1: white;\n  --col-2: black;\n  --col-3: rgb(255, 163, 163);\n}\n\n*, *::before, *::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#content {\n  font-family: var(--font-family);\n  width: 100vw;\n  min-height: 100vh;\n  color: var(--col-2);\n  background-color: var(--col-1);\n  display: grid;\n  grid-template-rows: auto auto 1fr;\n  justify-items: center;\n  padding: 4rem;\n  gap: 4rem;\n  position: relative;\n}\n\n/* MAIN PAGE */\n\n#header {\n  grid-column: 1 / -1;\n  font-size: 4rem;\n}\n\n#footer {\n  grid-column: 1 / -1;\n  align-self: end;\n  color: var(--col-2);\n}\n\n#footer > a {\n  color: var(--col-2);\n}\n\n#gameboard-wrapper {\n  display: grid;\n  gap: 4rem;\n  justify-items: center;\n  width: 100%;\n  grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\n}\n\n.gameboard {\n  display: grid;\n  grid-auto-rows: 1fr;\n  border: thin solid var(--col-2);\n  width: 20rem;\n  height: 20rem;\n}\n\n.board-cell {\n  border: thin solid var(--col-2);\n  position: relative;\n}\n\n.board-cell.hit::before,\n.board-cell.water::before {\n  content: '';\n  width: 100%;\n  height: 100%;\n  position: absolute;\n}\n\n.board-cell.hit::before {\n  background-color: var(--col-1);\n  clip-path: polygon(20% 10%, 10% 20%, 40% 50%, 10% 80%, 20% 90%, 50% 60%, 80%\n  90%, 90% 80%, 60% 50%, 90% 20%, 80% 10%, 50% 40%);\n}\n\n.board-cell.water::before {\n  background-color: var(--col-2);\n  clip-path: polygon(10% 80%, 20% 90%, 90% 20%, 80% 10%);\n}\n\n.board-cell.ship,\n.board-cell.hover {\n  background-color: var(--col-2);\n}\n\n\n.board-cell.enemy:hover {\n  background-color: var(--col-3);\n  cursor: pointer;\n}\n\n.board-row {\n  display: grid;\n  grid-auto-flow: column;\n  justify-content: start;\n  grid-auto-columns: 1fr;\n}\n\n/* POPUP TO PLACE SHIPS */\n\n#popup-background {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(97, 98, 117, 0.554);\n  /* margin-top: -4rem; */\n}\n\n#popup {\n  background-color: var(--col-1);\n  padding: 4rem;\n  border-radius: 1rem;\n  margin: 4rem auto;\n  width: min-content;\n  display: grid;\n  justify-items: center;\n  gap: 1rem;\n}\n\n#popup > p {\n  text-decoration: underline;\n}\n\n.select {\n  position: relative;\n}\n\n.select:hover::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  background-color: var(--col-2);\n}\n\n#rotate-button {\n  appearance: none;\n  padding: 0.25rem;\n  border: thin solid var(--col-2);\n  background-color: var(--col-1);\n  border-radius: 0.5rem;\n  font-size: 1rem;\n}\n\n#rotate-button:hover {\n  background-color: rgba(97, 98, 117, 0.554);\n}\n\n@media only screen and (max-width: 600px) {\n  :root {\n    font-size: 0.9rem;\n  }\n\n  .gameboard {\n    width: 15rem;\n    height: 15rem;\n  }\n\n  #content {\n    padding: 1rem;\n    gap: 2rem;\n  }\n\n  #gameboard-wrapper {\n    gap: 2rem;\n  }\n\n  #popup {\n    margin: 1rem auto;\n    padding: 2rem;\n    border-radius: 0.5rem;\n  }\n}\n\n/* ANNOUNCE WINNER  */\n\n#winner {\n  position: absolute;\n  text-align: center;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(97, 98, 117, 0.731);\n  font-size: 4rem;\n  padding: 4rem;\n  display: grid;\n  place-items: center;\n  color: var(--col-1);\n  opacity: 0;\n}\n\n#winner.show {\n  transition: opacity 2s;\n  opacity: 1;\n}\n"],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],s=r.base?c[0]+r.base:c[0],l=a[s]||0,d="".concat(s," ").concat(l);a[s]=l+1;var u=t(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=o(p,r);r.byIndex=A,e.splice(A,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var c=r(n,o),s=0;s<a.length;s++){var l=t(a[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{function n(){const n=function(){const n=["1","2","3","4","5","6","7","8","9","10"],e=["a","b","c","d","e","f","g","h","i","j"],t={};return e.forEach((e=>{n.forEach((n=>{t[e+n]=null}))})),{board:t,place:function({start:r,direction:o,length:a}){const i=function({length:n}){const e=[];for(let t=0;t<n;t+=1)e.push(!0);return{hit:function({relativeCoordinates:n}={relativeCoordinates:null}){if(null==n)throw new Error("No 'relativeCoordinates'");if(n<0||n>=e.length)throw new Error("Wrong 'relativeCoordinates'");e[n]=!1},isSunk:()=>e.every((n=>!n))}}({length:a}),{letter:A,number:c}=r.match(/^(?<letter>\w)(?<number>\d{1,2})$/).groups;let s=e.indexOf(A),l=n.indexOf(c);const d=[];for(let r=0;r<a;r+=1){if(null!==t[e[s]+n[l]])return!1;d.push(e[s]+n[l]),"vertical"===o?s+=1:"horizontal"===o&&(l+=1)}return d.forEach(((n,e)=>{var r;t[n]=(r=e,()=>(i.hit({relativeCoordinates:r}),i.isSunk()))})),!0},receiveAttack:function(n){if("function"==typeof t[n]){const e=t[n]();return t[n]="hit",e?Object.values(t).every((n=>"function"!=typeof n))?"allSunk":"sunk":"hit"}return t[n]="miss","miss"}}}(),e=e=>t=>n.place({...t,length:e}),t=function*(){yield["Carrier",5,e(5)],yield["Battleship",4,e(4)],yield["Cruiser",3,e(3)],yield["Destroyer",2,e(2)],yield["Destroyer",2,e(2)],yield["Submarine",1,e(1)],yield["Submarine",1,e(1)]};return{attack:function({gameboard:n,coordinates:e=null}){if(null===e){const e=Object.entries(n.board).filter((([n,e])=>"hit"!==e&&"miss"!==e)).map((([n,e])=>n));return n.receiveAttack(e[Math.floor(Math.random()*e.length)])}return n.receiveAttack(e)},receiveAttack:n.receiveAttack,board:n.board,placeShips:t,placeRandomShips:function(){const n=t(),e=["horizontal","vertical"],r=["1","2","3","4","5","6","7","8","9","10"],o=["a","b","c","d","e","f","g","h","i","j"];for(;;){const t=n.next(),{value:a,done:i}=t;if(i)break;const[,,A]=a;let c,s;do{c=o[Math.floor(Math.random()*o.length)]+r[Math.floor(Math.random()*r.length)],s=e[Math.floor(Math.random()*e.length)]}while(!A({start:c,direction:s}))}return!0}}}var e=t(379),r=t.n(e),o=t(795),a=t.n(o),i=t(569),A=t.n(i),c=t(565),s=t.n(c),l=t(216),d=t.n(l),u=t(589),p=t.n(u),m=t(426),h={};let E,f,b;h.styleTagTransform=p(),h.setAttributes=s(),h.insert=A().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),r()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals,function e(){E=n(),f=n(),b&&b.remove(),b=function(){const n=(n="div")=>document.createElement(n),e=n();e.id="content",document.body.append(e);const t={},r={},o=["a","b","c","d","e","f","g","h","i","j"],a=["1","2","3","4","5","6","7","8","9","10"],i=function(e,t=null){o.forEach((r=>{const o=n();o.classList.add("board-row"),a.forEach((e=>{const a=n();null!==t&&(t[r+e]=a),a.classList.add("board-cell"),o.append(a)})),e.append(o)}))},A=function({start:n,direction:e,length:t}){const r=[],{letter:i,number:A}=n.match(/^(?<letter>\w)(?<number>\d{1,2})$/).groups;let c=o.indexOf(i),s=a.indexOf(A);for(let n=0;n<t&&c<10&&s<10;n+=1)r.push(o[c]+a[s]),"vertical"===e?c+=1:"horizontal"===e&&(s+=1);return r};return{buildMainPage:function(o){const a=n("h1");a.id="header",a.textContent="Battleship";const A=n();A.classList.add("gameboard"),i(A,t);const c=n();c.classList.add("gameboard"),i(c,r),Object.entries(r).forEach((([n,e])=>{e.classList.add("enemy"),e.addEventListener("click",(function t(){o(n),e.classList.remove("enemy"),e.removeEventListener("click",t)}))}));const s=n();s.id="gameboard-wrapper",s.append(A,c);const l=n("p");l.id="footer";const d=n("a");d.textContent="View Project On Github",d.href="https://github.com/TomSoerr/odin-battleship",l.append(d),e.append(a,s,l)},buildPlaceShipPopup:function(t,r){const o=n();o.id="popup";const a=n();a.id="popup-background";const c=n("h2");c.textContent="Place your ships";const s=n("p");let l,d;[s.textContent,l,d]=t.next().value;let u=!1;const p=n("button");p.id="rotate-button",p.textContent="Rotate",p.addEventListener("click",(()=>{u=!u}));const m=n();m.classList.add("gameboard");let h={};i(m,h),Object.entries(h).forEach((([n,e])=>{e.classList.add("select"),e.addEventListener("click",(()=>{const e=u?"vertical":"horizontal";if(d({start:n,direction:e})){A({length:l,direction:e,start:n}).forEach((n=>{h[n].classList.add("ship")}));const o=t.next().value;void 0!==o?[s.textContent,l,d]=o:(a.remove(),h=null,r())}})),e.addEventListener("mouseenter",(()=>{A({length:l,direction:u?"vertical":"horizontal",start:n}).forEach((n=>{h[n].classList.add("hover")}))})),e.addEventListener("mouseleave",(()=>{A({length:l,direction:u?"vertical":"horizontal",start:n}).forEach((n=>{h[n].classList.remove("hover")}))}))})),o.append(c,s,p,m),a.append(o),e.append(a)},render:function(n,e){Object.entries(n).forEach((([n,e])=>{switch(!0){case"function"==typeof e:t[n].classList.add("ship");break;case"miss"===e:t[n].classList.add("water");break;case"hit"===e:t[n].classList.add("hit")}})),Object.entries(e).forEach((([n,e])=>{"miss"===e?r[n].classList.add("water"):"hit"===e&&(r[n].classList.add("ship"),r[n].classList.add("hit"))}))},remove:()=>{for(;document.body.firstChild;)document.body.removeChild(document.body.lastChild)},announceWinner:function(t){const r=n();r.textContent=t,r.id="winner",e.append(r),setTimeout((()=>{r.classList.add("show")}),1)}}}(),b.buildMainPage((n=>{let t=E.attack({gameboard:f,coordinates:n});b.render(E.board,f.board),"allSunk"===t&&(b.announceWinner("The player is the winner"),setTimeout((()=>{e()}),5e3)),t=f.attack({gameboard:E}),b.render(E.board,f.board),"allSunk"===t&&(b.announceWinner("The computer is the winner"),setTimeout((()=>{e()}),5e3))})),b.buildPlaceShipPopup(E.placeShips(),(()=>{f.placeRandomShips(),b.render(E.board,f.board)}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,