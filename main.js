(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>A});var o=t(354),r=t.n(o),a=t(314),i=t.n(a)()(r());i.push([n.id,":root {\n  --font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,\n  Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;\n  --col-1: white;\n  --col-2: black;\n  --col-3: rgb(255, 163, 163);\n}\n\n*, *::before, *::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#content {\n  font-family: var(--font-family);\n  width: 100vw;\n  min-height: 100vh;\n  color: var(--col-2);\n  background-color: var(--col-1);\n  display: grid;\n  grid-template-rows: auto auto 1fr;\n  justify-items: center;\n  padding: 4rem;\n  gap: 4rem;\n  position: relative;\n}\n\n/* MAIN PAGE */\n\n#header {\n  grid-column: 1 / -1;\n  font-size: 4rem;\n}\n\n#footer {\n  grid-column: 1 / -1;\n  align-self: end;\n  color: var(--col-2);\n}\n\n#footer > a {\n  color: var(--col-2);\n}\n\n#gameboard-wrapper {\n  display: grid;\n  gap: 4rem;\n  justify-items: center;\n  width: 100%;\n  grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\n}\n\n.gameboard {\n  display: grid;\n  grid-auto-rows: 1fr;\n  border: thin solid var(--col-2);\n  width: 20rem;\n  height: 20rem;\n}\n\n.board-cell {\n  border: thin solid var(--col-2);\n  position: relative;\n}\n\n.board-cell.hit::before,\n.board-cell.water::before {\n  content: '';\n  width: 100%;\n  height: 100%;\n  position: absolute;\n}\n\n.board-cell.hit::before {\n  background-color: var(--col-1);\n  clip-path: polygon(20% 10%, 10% 20%, 40% 50%, 10% 80%, 20% 90%, 50% 60%, 80%\n  90%, 90% 80%, 60% 50%, 90% 20%, 80% 10%, 50% 40%);\n}\n\n.board-cell.water::before {\n  background-color: var(--col-2);\n  clip-path: polygon(10% 80%, 20% 90%, 90% 20%, 80% 10%);\n}\n\n.board-cell.ship,\n.board-cell.hover {\n  background-color: var(--col-2);\n}\n\n\n.board-cell.enemy:hover {\n  background-color: var(--col-3);\n  cursor: pointer;\n}\n\n.board-row {\n  display: grid;\n  grid-auto-flow: column;\n  justify-content: start;\n  grid-auto-columns: 1fr;\n}\n\n/* POPUP TO PLACE SHIPS */\n\n#popup-background {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(97, 98, 117, 0.554);\n  /* margin-top: -4rem; */\n}\n\n#popup {\n  background-color: var(--col-1);\n  padding: 4rem;\n  border-radius: 1rem;\n  margin: 4rem auto;\n  width: min-content;\n  display: grid;\n  justify-items: center;\n  gap: 1rem;\n}\n\n#popup > p {\n  text-decoration: underline;\n}\n\n.select {\n  position: relative;\n}\n\n.select:hover::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  background-color: var(--col-2);\n}\n\n#rotate-button {\n  appearance: none;\n  padding: 0.25rem;\n  border: thin solid var(--col-2);\n  background-color: var(--col-1);\n  border-radius: 0.5rem;\n  font-size: 1rem;\n}\n\n#rotate-button:hover {\n  background-color: rgba(97, 98, 117, 0.554);\n}\n\n@media only screen and (max-width: 600px) {\n  :root {\n    font-size: 0.9rem;\n  }\n\n  .gameboard {\n    width: 15rem;\n    height: 15rem;\n  }\n\n  #content {\n    padding: 1rem;\n    gap: 2rem;\n  }\n\n  #gameboard-wrapper {\n    gap: 2rem;\n  }\n\n  #popup {\n    margin: 1rem auto;\n    padding: 2rem;\n    border-radius: 0.5rem;\n  }\n}\n\n/* ANNOUNCE WINNER  */\n\n#winner {\n  position: absolute;\n  text-align: center;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(97, 98, 117, 0.731);\n  font-size: 4rem;\n  padding: 4rem;\n  display: grid;\n  place-items: center;\n  color: var(--col-1);\n  opacity: 0;\n}\n\n#winner.show {\n  transition: opacity 2s;\n  opacity: 1;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE;8CAC4C;EAC5C,cAAc;EACd,cAAc;EACd,2BAA2B;AAC7B;;AAEA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,+BAA+B;EAC/B,YAAY;EACZ,iBAAiB;EACjB,mBAAmB;EACnB,8BAA8B;EAC9B,aAAa;EACb,iCAAiC;EACjC,qBAAqB;EACrB,aAAa;EACb,SAAS;EACT,kBAAkB;AACpB;;AAEA,cAAc;;AAEd;EACE,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,mBAAmB;EACnB,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,SAAS;EACT,qBAAqB;EACrB,WAAW;EACX,2DAA2D;AAC7D;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,+BAA+B;EAC/B,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,+BAA+B;EAC/B,kBAAkB;AACpB;;AAEA;;EAEE,WAAW;EACX,WAAW;EACX,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,8BAA8B;EAC9B;mDACiD;AACnD;;AAEA;EACE,8BAA8B;EAC9B,sDAAsD;AACxD;;AAEA;;EAEE,8BAA8B;AAChC;;;AAGA;EACE,8BAA8B;EAC9B,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,sBAAsB;EACtB,sBAAsB;AACxB;;AAEA,yBAAyB;;AAEzB;EACE,eAAe;EACf,MAAM;EACN,SAAS;EACT,WAAW;EACX,YAAY;EACZ,0CAA0C;EAC1C,uBAAuB;AACzB;;AAEA;EACE,8BAA8B;EAC9B,aAAa;EACb,mBAAmB;EACnB,iBAAiB;EACjB,kBAAkB;EAClB,aAAa;EACb,qBAAqB;EACrB,SAAS;AACX;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,MAAM;EACN,YAAY;EACZ,WAAW;EACX,8BAA8B;AAChC;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,+BAA+B;EAC/B,8BAA8B;EAC9B,qBAAqB;EACrB,eAAe;AACjB;;AAEA;EACE,0CAA0C;AAC5C;;AAEA;EACE;IACE,iBAAiB;EACnB;;EAEA;IACE,YAAY;IACZ,aAAa;EACf;;EAEA;IACE,aAAa;IACb,SAAS;EACX;;EAEA;IACE,SAAS;EACX;;EAEA;IACE,iBAAiB;IACjB,aAAa;IACb,qBAAqB;EACvB;AACF;;AAEA,qBAAqB;;AAErB;EACE,kBAAkB;EAClB,kBAAkB;EAClB,MAAM;EACN,WAAW;EACX,YAAY;EACZ,0CAA0C;EAC1C,eAAe;EACf,aAAa;EACb,aAAa;EACb,mBAAmB;EACnB,mBAAmB;EACnB,UAAU;AACZ;;AAEA;EACE,sBAAsB;EACtB,UAAU;AACZ",sourcesContent:[":root {\n  --font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,\n  Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;\n  --col-1: white;\n  --col-2: black;\n  --col-3: rgb(255, 163, 163);\n}\n\n*, *::before, *::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#content {\n  font-family: var(--font-family);\n  width: 100vw;\n  min-height: 100vh;\n  color: var(--col-2);\n  background-color: var(--col-1);\n  display: grid;\n  grid-template-rows: auto auto 1fr;\n  justify-items: center;\n  padding: 4rem;\n  gap: 4rem;\n  position: relative;\n}\n\n/* MAIN PAGE */\n\n#header {\n  grid-column: 1 / -1;\n  font-size: 4rem;\n}\n\n#footer {\n  grid-column: 1 / -1;\n  align-self: end;\n  color: var(--col-2);\n}\n\n#footer > a {\n  color: var(--col-2);\n}\n\n#gameboard-wrapper {\n  display: grid;\n  gap: 4rem;\n  justify-items: center;\n  width: 100%;\n  grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\n}\n\n.gameboard {\n  display: grid;\n  grid-auto-rows: 1fr;\n  border: thin solid var(--col-2);\n  width: 20rem;\n  height: 20rem;\n}\n\n.board-cell {\n  border: thin solid var(--col-2);\n  position: relative;\n}\n\n.board-cell.hit::before,\n.board-cell.water::before {\n  content: '';\n  width: 100%;\n  height: 100%;\n  position: absolute;\n}\n\n.board-cell.hit::before {\n  background-color: var(--col-1);\n  clip-path: polygon(20% 10%, 10% 20%, 40% 50%, 10% 80%, 20% 90%, 50% 60%, 80%\n  90%, 90% 80%, 60% 50%, 90% 20%, 80% 10%, 50% 40%);\n}\n\n.board-cell.water::before {\n  background-color: var(--col-2);\n  clip-path: polygon(10% 80%, 20% 90%, 90% 20%, 80% 10%);\n}\n\n.board-cell.ship,\n.board-cell.hover {\n  background-color: var(--col-2);\n}\n\n\n.board-cell.enemy:hover {\n  background-color: var(--col-3);\n  cursor: pointer;\n}\n\n.board-row {\n  display: grid;\n  grid-auto-flow: column;\n  justify-content: start;\n  grid-auto-columns: 1fr;\n}\n\n/* POPUP TO PLACE SHIPS */\n\n#popup-background {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(97, 98, 117, 0.554);\n  /* margin-top: -4rem; */\n}\n\n#popup {\n  background-color: var(--col-1);\n  padding: 4rem;\n  border-radius: 1rem;\n  margin: 4rem auto;\n  width: min-content;\n  display: grid;\n  justify-items: center;\n  gap: 1rem;\n}\n\n#popup > p {\n  text-decoration: underline;\n}\n\n.select {\n  position: relative;\n}\n\n.select:hover::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  background-color: var(--col-2);\n}\n\n#rotate-button {\n  appearance: none;\n  padding: 0.25rem;\n  border: thin solid var(--col-2);\n  background-color: var(--col-1);\n  border-radius: 0.5rem;\n  font-size: 1rem;\n}\n\n#rotate-button:hover {\n  background-color: rgba(97, 98, 117, 0.554);\n}\n\n@media only screen and (max-width: 600px) {\n  :root {\n    font-size: 0.9rem;\n  }\n\n  .gameboard {\n    width: 15rem;\n    height: 15rem;\n  }\n\n  #content {\n    padding: 1rem;\n    gap: 2rem;\n  }\n\n  #gameboard-wrapper {\n    gap: 2rem;\n  }\n\n  #popup {\n    margin: 1rem auto;\n    padding: 2rem;\n    border-radius: 0.5rem;\n  }\n}\n\n/* ANNOUNCE WINNER  */\n\n#winner {\n  position: absolute;\n  text-align: center;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(97, 98, 117, 0.731);\n  font-size: 4rem;\n  padding: 4rem;\n  display: grid;\n  place-items: center;\n  color: var(--col-1);\n  opacity: 0;\n}\n\n#winner.show {\n  transition: opacity 2s;\n  opacity: 1;\n}\n"],sourceRoot:""}]);const A=i},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],s=o.base?c[0]+o.base:c[0],l=a[s]||0,d="".concat(s," ").concat(l);a[s]=l+1;var p=t(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=r(u,o);o.byIndex=A,e.splice(A,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var c=o(n,r),s=0;s<a.length;s++){var l=t(a[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=c}}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{function n(){const n=function(){const n=["1","2","3","4","5","6","7","8","9","10"],e=["a","b","c","d","e","f","g","h","i","j"],t={};return e.forEach((e=>{n.forEach((n=>{t[e+n]=null}))})),{board:t,place:function({start:o,direction:r,length:a}){const i=function({length:n}){const e=[];for(let t=0;t<n;t+=1)e.push(!0);return{hit:function({relativeCoordinates:n}={relativeCoordinates:null}){if(null==n)throw new Error("No 'relativeCoordinates'");if(n<0||n>=e.length)throw new Error("Wrong 'relativeCoordinates'");e[n]=!1},isSunk:()=>e.every((n=>!n))}}({length:a}),{letter:A,number:c}=o.match(/^(?<letter>\w)(?<number>\d{1,2})$/).groups;let s=e.indexOf(A),l=n.indexOf(c);const d=[];for(let o=0;o<a;o+=1){if(null!==t[e[s]+n[l]])return!1;d.push(e[s]+n[l]),"vertical"===r?s+=1:"horizontal"===r&&(l+=1)}return d.forEach(((n,e)=>{var o;t[n]=(o=e,()=>(i.hit({relativeCoordinates:o}),i.isSunk()))})),!0},receiveAttack:function(n){if("function"==typeof t[n]){const e=t[n]();return t[n]="hit",e?Object.values(t).every((n=>"function"!=typeof n))?"allSunk":"sunk":"hit"}return t[n]="miss","miss"}}}(),e=e=>t=>n.place({...t,length:e}),t=function*(){yield["Carrier",5,e(5)],yield["Battleship",4,e(4)],yield["Cruiser",3,e(3)],yield["Destroyer",2,e(2)],yield["Destroyer",2,e(2)],yield["Submarine",1,e(1)],yield["Submarine",1,e(1)]};return{attack:function({gameboard:n,coordinates:e=null}){if(null===e){const e=Object.entries(n.board).filter((([n,e])=>"hit"!==e&&"miss"!==e)).map((([n,e])=>n));return n.receiveAttack(e[Math.floor(Math.random()*e.length)])}return n.receiveAttack(e)},receiveAttack:n.receiveAttack,board:n.board,placeShips:t,placeRandomShips:function(){const n=t(),e=["horizontal","vertical"],o=["1","2","3","4","5","6","7","8","9","10"],r=["a","b","c","d","e","f","g","h","i","j"];for(;;){const t=n.next(),{value:a,done:i}=t;if(i)break;const[,,A]=a;let c,s;do{c=r[Math.floor(Math.random()*r.length)]+o[Math.floor(Math.random()*o.length)],s=e[Math.floor(Math.random()*e.length)]}while(!A({start:c,direction:s}))}return!0}}}var e=t(72),o=t.n(e),r=t(825),a=t.n(r),i=t(659),A=t.n(i),c=t(56),s=t.n(c),l=t(540),d=t.n(l),p=t(113),u=t.n(p),m=t(208),f={};let h,E,b;f.styleTagTransform=u(),f.setAttributes=s(),f.insert=A().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=d(),o()(m.A,f),m.A&&m.A.locals&&m.A.locals,function e(){h=n(),E=n(),b&&b.remove(),b=function(){const n=(n="div")=>document.createElement(n),e=n();e.id="content",document.body.append(e);const t={},o={},r=["a","b","c","d","e","f","g","h","i","j"],a=["1","2","3","4","5","6","7","8","9","10"],i=function(e,t=null){r.forEach((o=>{const r=n();r.classList.add("board-row"),a.forEach((e=>{const a=n();null!==t&&(t[o+e]=a),a.classList.add("board-cell"),r.append(a)})),e.append(r)}))},A=function({start:n,direction:e,length:t}){const o=[],{letter:i,number:A}=n.match(/^(?<letter>\w)(?<number>\d{1,2})$/).groups;let c=r.indexOf(i),s=a.indexOf(A);for(let n=0;n<t&&c<10&&s<10;n+=1)o.push(r[c]+a[s]),"vertical"===e?c+=1:"horizontal"===e&&(s+=1);return o};return{buildMainPage:function(r){const a=n("h1");a.id="header",a.textContent="Battleship";const A=n();A.classList.add("gameboard"),i(A,t);const c=n();c.classList.add("gameboard"),i(c,o),Object.entries(o).forEach((([n,e])=>{e.classList.add("enemy"),e.addEventListener("click",(function t(){r(n),e.classList.remove("enemy"),e.removeEventListener("click",t)}))}));const s=n();s.id="gameboard-wrapper",s.append(A,c);const l=n("p");l.id="footer";const d=n("a");d.textContent="View Project On Github",d.href="https://github.com/TomSoerr/odin-battleship",l.append(d),e.append(a,s,l);const p=document.createElement("template");p.innerHTML='\n        <a\n      style="\n        position: fixed;\n        bottom: 0;\n        right: 0;\n        color: black;\n        background-color: white;\n        text-decoration: none;\n        font-size: 16px;\n        font-family: sans-serif;\n        padding: 2px;\n        border: thin solid black;\n        text-decoration: underline;\n      "\n      href="https://tomsoerr.github.io/#/impressum"\n    >\n      Imprint\n    </a>\n    <span\n      style="\n        z-index: 1000;\n        position: fixed;\n        bottom: 0;\n        left: 0;\n        color: black;\n        background-color: white;\n        text-decoration: none;\n        font-size: 16px;\n        font-family: sans-serif;\n        padding: 2px;\n        border: thin solid black;\n      "\n    >\n      Not a commercial site, only for educational purposes.\n    </span>',document.body.append(p.content)},buildPlaceShipPopup:function(t,o){const r=n();r.id="popup";const a=n();a.id="popup-background";const c=n("h2");c.textContent="Place your ships";const s=n("p");let l,d;[s.textContent,l,d]=t.next().value;let p=!1;const u=n("button");u.id="rotate-button",u.textContent="Rotate",u.addEventListener("click",(()=>{p=!p}));const m=n();m.classList.add("gameboard");let f={};i(m,f),Object.entries(f).forEach((([n,e])=>{e.classList.add("select"),e.addEventListener("click",(()=>{const e=p?"vertical":"horizontal";if(d({start:n,direction:e})){A({length:l,direction:e,start:n}).forEach((n=>{f[n].classList.add("ship")}));const r=t.next().value;void 0!==r?[s.textContent,l,d]=r:(a.remove(),f=null,o())}})),e.addEventListener("mouseenter",(()=>{A({length:l,direction:p?"vertical":"horizontal",start:n}).forEach((n=>{f[n].classList.add("hover")}))})),e.addEventListener("mouseleave",(()=>{A({length:l,direction:p?"vertical":"horizontal",start:n}).forEach((n=>{f[n].classList.remove("hover")}))}))})),r.append(c,s,u,m),a.append(r),e.append(a)},render:function(n,e){Object.entries(n).forEach((([n,e])=>{switch(!0){case"function"==typeof e:t[n].classList.add("ship");break;case"miss"===e:t[n].classList.add("water");break;case"hit"===e:t[n].classList.add("hit")}})),Object.entries(e).forEach((([n,e])=>{"miss"===e?o[n].classList.add("water"):"hit"===e&&(o[n].classList.add("ship"),o[n].classList.add("hit"))}))},remove:()=>{for(;document.body.firstChild;)document.body.removeChild(document.body.lastChild)},announceWinner:function(t){const o=n();o.textContent=t,o.id="winner",e.append(o),setTimeout((()=>{o.classList.add("show")}),1)}}}(),b.buildMainPage((n=>{let t=h.attack({gameboard:E,coordinates:n});b.render(h.board,E.board),"allSunk"===t&&(b.announceWinner("The player is the winner"),setTimeout((()=>{e()}),5e3)),t=E.attack({gameboard:h}),b.render(h.board,E.board),"allSunk"===t&&(b.announceWinner("The computer is the winner"),setTimeout((()=>{e()}),5e3))})),b.buildPlaceShipPopup(h.placeShips(),(()=>{E.placeRandomShips(),b.render(h.board,E.board)}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,